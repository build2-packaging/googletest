import intf_libs = gtest%lib{gtest}

# Public headers.
#
pub = [dir_path] ../include/gmock/

include $pub

pub_hdrs = $($pub/ pub_hdrs)

# Libraries.
#
./: lib{gmock} liba{gmock_main}

lib{gmock}: {hxx cxx}{* -gmock_main} $pub/{$pub_hdrs} $intf_libs

# Provide custom obja{} to avoid synthesized dependency on lib{gmock} and
# -DGMOCK_LINKED_AS_SHARED_LIBRARY that it brings. But we do need lib{gtest}.
#
liba{gmock_main}: obja{gmock_main} lib{gmock}
obja{gmock_main}: cxx{gmock_main} $intf_libs

# Defines main() so link in the whole archive mode.
#
liba{gmock_main}: bin.whole = true

# Build options.
#
# Note that the source files include internal headers as "src/...".
#
src_pfx_inc = [dir_path] $src_root/include/
src_pfx_src = [dir_path] $src_root

cxx.poptions =+ "-I$src_pfx_src" "-I$src_pfx_inc"

{hbmis objs}{*}: cxx.poptions += -DGMOCK_CREATE_SHARED_LIBRARY=1

# Export options.
#
lib{gmock}:
{
  cxx.export.poptions = "-I$src_pfx_inc"
  cxx.export.libs = $intf_libs
}

libs{gmock}: cxx.export.poptions += -DGMOCK_LINKED_AS_SHARED_LIBRARY=1

liba{gmock_main}:
{
  cxx.export.poptions = "-I$src_pfx_inc"
  cxx.export.libs = lib{gmock}
}

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
#
if $version.pre_release
  lib{gmock}: bin.lib.version = "-$version.project_id"
else
  lib{gmock}: bin.lib.version = "-$version.major.$version.minor"

# Don't install private headers.
#
hxx{*}: install = false
